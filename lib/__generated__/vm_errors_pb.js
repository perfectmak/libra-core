/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var language_storage_pb = require('./language_storage_pb.js');
goog.object.extend(proto, language_storage_pb);
goog.exportSymbol('proto.types.Aborted', null, global);
goog.exportSymbol('proto.types.ArithmeticError', null, global);
goog.exportSymbol('proto.types.ArithmeticError.ArithmeticErrorType', null, global);
goog.exportSymbol('proto.types.BinaryError', null, global);
goog.exportSymbol('proto.types.DynamicReferenceError', null, global);
goog.exportSymbol('proto.types.DynamicReferenceError.DynamicReferenceErrorType', null, global);
goog.exportSymbol('proto.types.ExecutionStatus', null, global);
goog.exportSymbol('proto.types.RuntimeStatus', null, global);
goog.exportSymbol('proto.types.VMInvariantViolationError', null, global);
goog.exportSymbol('proto.types.VMStatus', null, global);
goog.exportSymbol('proto.types.VMValidationStatus', null, global);
goog.exportSymbol('proto.types.VMValidationStatusCode', null, global);
goog.exportSymbol('proto.types.VMVerificationErrorKind', null, global);
goog.exportSymbol('proto.types.VMVerificationStatus', null, global);
goog.exportSymbol('proto.types.VMVerificationStatus.StatusKind', null, global);
goog.exportSymbol('proto.types.VMVerificationStatusList', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.VMValidationStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.VMValidationStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.types.VMValidationStatus.displayName = 'proto.types.VMValidationStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.VMValidationStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.types.VMValidationStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.VMValidationStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.VMValidationStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.VMValidationStatus}
 */
proto.types.VMValidationStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.VMValidationStatus;
  return proto.types.VMValidationStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.VMValidationStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.VMValidationStatus}
 */
proto.types.VMValidationStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.types.VMValidationStatusCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.VMValidationStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.VMValidationStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.VMValidationStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.VMValidationStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional VMValidationStatusCode code = 1;
 * @return {!proto.types.VMValidationStatusCode}
 */
proto.types.VMValidationStatus.prototype.getCode = function() {
  return /** @type {!proto.types.VMValidationStatusCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.types.VMValidationStatusCode} value */
proto.types.VMValidationStatus.prototype.setCode = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.types.VMValidationStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.types.VMValidationStatus.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.VMVerificationStatusList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.VMVerificationStatusList.repeatedFields_, null);
};
goog.inherits(proto.types.VMVerificationStatusList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.types.VMVerificationStatusList.displayName = 'proto.types.VMVerificationStatusList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.types.VMVerificationStatusList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.VMVerificationStatusList.prototype.toObject = function(opt_includeInstance) {
  return proto.types.VMVerificationStatusList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.VMVerificationStatusList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.VMVerificationStatusList.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusListList: jspb.Message.toObjectList(msg.getStatusListList(),
    proto.types.VMVerificationStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.VMVerificationStatusList}
 */
proto.types.VMVerificationStatusList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.VMVerificationStatusList;
  return proto.types.VMVerificationStatusList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.VMVerificationStatusList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.VMVerificationStatusList}
 */
proto.types.VMVerificationStatusList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.types.VMVerificationStatus;
      reader.readMessage(value,proto.types.VMVerificationStatus.deserializeBinaryFromReader);
      msg.addStatusList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.VMVerificationStatusList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.VMVerificationStatusList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.VMVerificationStatusList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.VMVerificationStatusList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.types.VMVerificationStatus.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VMVerificationStatus status_list = 1;
 * @return {!Array<!proto.types.VMVerificationStatus>}
 */
proto.types.VMVerificationStatusList.prototype.getStatusListList = function() {
  return /** @type{!Array<!proto.types.VMVerificationStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.types.VMVerificationStatus, 1));
};


/** @param {!Array<!proto.types.VMVerificationStatus>} value */
proto.types.VMVerificationStatusList.prototype.setStatusListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.types.VMVerificationStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.types.VMVerificationStatus}
 */
proto.types.VMVerificationStatusList.prototype.addStatusList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.VMVerificationStatus, opt_index);
};


proto.types.VMVerificationStatusList.prototype.clearStatusListList = function() {
  this.setStatusListList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.VMVerificationStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.VMVerificationStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.types.VMVerificationStatus.displayName = 'proto.types.VMVerificationStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.VMVerificationStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.types.VMVerificationStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.VMVerificationStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.VMVerificationStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusKind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    moduleIdx: jspb.Message.getFieldWithDefault(msg, 2, 0),
    errorKind: jspb.Message.getFieldWithDefault(msg, 3, 0),
    message: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dependencyId: (f = msg.getDependencyId()) && language_storage_pb.ModuleId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.VMVerificationStatus}
 */
proto.types.VMVerificationStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.VMVerificationStatus;
  return proto.types.VMVerificationStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.VMVerificationStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.VMVerificationStatus}
 */
proto.types.VMVerificationStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.types.VMVerificationStatus.StatusKind} */ (reader.readEnum());
      msg.setStatusKind(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setModuleIdx(value);
      break;
    case 3:
      var value = /** @type {!proto.types.VMVerificationErrorKind} */ (reader.readEnum());
      msg.setErrorKind(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 5:
      var value = new language_storage_pb.ModuleId;
      reader.readMessage(value,language_storage_pb.ModuleId.deserializeBinaryFromReader);
      msg.setDependencyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.VMVerificationStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.VMVerificationStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.VMVerificationStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.VMVerificationStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getModuleIdx();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getErrorKind();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDependencyId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      language_storage_pb.ModuleId.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.types.VMVerificationStatus.StatusKind = {
  SCRIPT: 0,
  MODULE: 1,
  DEPENDENCY: 2
};

/**
 * optional StatusKind status_kind = 1;
 * @return {!proto.types.VMVerificationStatus.StatusKind}
 */
proto.types.VMVerificationStatus.prototype.getStatusKind = function() {
  return /** @type {!proto.types.VMVerificationStatus.StatusKind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.types.VMVerificationStatus.StatusKind} value */
proto.types.VMVerificationStatus.prototype.setStatusKind = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 module_idx = 2;
 * @return {number}
 */
proto.types.VMVerificationStatus.prototype.getModuleIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.types.VMVerificationStatus.prototype.setModuleIdx = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional VMVerificationErrorKind error_kind = 3;
 * @return {!proto.types.VMVerificationErrorKind}
 */
proto.types.VMVerificationStatus.prototype.getErrorKind = function() {
  return /** @type {!proto.types.VMVerificationErrorKind} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.types.VMVerificationErrorKind} value */
proto.types.VMVerificationStatus.prototype.setErrorKind = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.types.VMVerificationStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.types.VMVerificationStatus.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ModuleId dependency_id = 5;
 * @return {?proto.types.ModuleId}
 */
proto.types.VMVerificationStatus.prototype.getDependencyId = function() {
  return /** @type{?proto.types.ModuleId} */ (
    jspb.Message.getWrapperField(this, language_storage_pb.ModuleId, 5));
};


/** @param {?proto.types.ModuleId|undefined} value */
proto.types.VMVerificationStatus.prototype.setDependencyId = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.types.VMVerificationStatus.prototype.clearDependencyId = function() {
  this.setDependencyId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.VMVerificationStatus.prototype.hasDependencyId = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.Aborted = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.Aborted, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.types.Aborted.displayName = 'proto.types.Aborted';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.Aborted.prototype.toObject = function(opt_includeInstance) {
  return proto.types.Aborted.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.Aborted} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.Aborted.toObject = function(includeInstance, msg) {
  var f, obj = {
    abortedErrorCode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.Aborted}
 */
proto.types.Aborted.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.Aborted;
  return proto.types.Aborted.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.Aborted} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.Aborted}
 */
proto.types.Aborted.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAbortedErrorCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.Aborted.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.Aborted.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.Aborted} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.Aborted.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAbortedErrorCode();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 aborted_error_code = 1;
 * @return {number}
 */
proto.types.Aborted.prototype.getAbortedErrorCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.types.Aborted.prototype.setAbortedErrorCode = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.ArithmeticError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.ArithmeticError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.types.ArithmeticError.displayName = 'proto.types.ArithmeticError';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.ArithmeticError.prototype.toObject = function(opt_includeInstance) {
  return proto.types.ArithmeticError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.ArithmeticError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.ArithmeticError.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorCode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.ArithmeticError}
 */
proto.types.ArithmeticError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.ArithmeticError;
  return proto.types.ArithmeticError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.ArithmeticError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.ArithmeticError}
 */
proto.types.ArithmeticError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.types.ArithmeticError.ArithmeticErrorType} */ (reader.readEnum());
      msg.setErrorCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.ArithmeticError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.ArithmeticError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.ArithmeticError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.ArithmeticError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.types.ArithmeticError.ArithmeticErrorType = {
  UNKNOWNARITHMETICERROR: 0,
  UNDERFLOW: 1,
  OVERFLOW: 2,
  DIVISIONBYZERO: 3
};

/**
 * optional ArithmeticErrorType error_code = 1;
 * @return {!proto.types.ArithmeticError.ArithmeticErrorType}
 */
proto.types.ArithmeticError.prototype.getErrorCode = function() {
  return /** @type {!proto.types.ArithmeticError.ArithmeticErrorType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.types.ArithmeticError.ArithmeticErrorType} value */
proto.types.ArithmeticError.prototype.setErrorCode = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.DynamicReferenceError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.DynamicReferenceError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.types.DynamicReferenceError.displayName = 'proto.types.DynamicReferenceError';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.DynamicReferenceError.prototype.toObject = function(opt_includeInstance) {
  return proto.types.DynamicReferenceError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.DynamicReferenceError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.DynamicReferenceError.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorCode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.DynamicReferenceError}
 */
proto.types.DynamicReferenceError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.DynamicReferenceError;
  return proto.types.DynamicReferenceError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.DynamicReferenceError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.DynamicReferenceError}
 */
proto.types.DynamicReferenceError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.types.DynamicReferenceError.DynamicReferenceErrorType} */ (reader.readEnum());
      msg.setErrorCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.DynamicReferenceError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.DynamicReferenceError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.DynamicReferenceError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.DynamicReferenceError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.types.DynamicReferenceError.DynamicReferenceErrorType = {
  UNKNOWNDYNAMICREFERENCEERROR: 0,
  MOVEOFBORROWEDRESOURCE: 1,
  GLOBALREFALREADYRELEASED: 2,
  MISSINGRELEASEREF: 3,
  GLOBALALREADYBORROWED: 4
};

/**
 * optional DynamicReferenceErrorType error_code = 1;
 * @return {!proto.types.DynamicReferenceError.DynamicReferenceErrorType}
 */
proto.types.DynamicReferenceError.prototype.getErrorCode = function() {
  return /** @type {!proto.types.DynamicReferenceError.DynamicReferenceErrorType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.types.DynamicReferenceError.DynamicReferenceErrorType} value */
proto.types.DynamicReferenceError.prototype.setErrorCode = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.ExecutionStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.types.ExecutionStatus.oneofGroups_);
};
goog.inherits(proto.types.ExecutionStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.types.ExecutionStatus.displayName = 'proto.types.ExecutionStatus';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.types.ExecutionStatus.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.types.ExecutionStatus.ExecutionStatusCase = {
  EXECUTION_STATUS_NOT_SET: 0,
  RUNTIME_STATUS: 1,
  ABORTED: 2,
  ARITHMETIC_ERROR: 3,
  REFERENCE_ERROR: 4
};

/**
 * @return {proto.types.ExecutionStatus.ExecutionStatusCase}
 */
proto.types.ExecutionStatus.prototype.getExecutionStatusCase = function() {
  return /** @type {proto.types.ExecutionStatus.ExecutionStatusCase} */(jspb.Message.computeOneofCase(this, proto.types.ExecutionStatus.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.ExecutionStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.types.ExecutionStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.ExecutionStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.ExecutionStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    runtimeStatus: jspb.Message.getFieldWithDefault(msg, 1, 0),
    aborted: (f = msg.getAborted()) && proto.types.Aborted.toObject(includeInstance, f),
    arithmeticError: (f = msg.getArithmeticError()) && proto.types.ArithmeticError.toObject(includeInstance, f),
    referenceError: (f = msg.getReferenceError()) && proto.types.DynamicReferenceError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.ExecutionStatus}
 */
proto.types.ExecutionStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.ExecutionStatus;
  return proto.types.ExecutionStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.ExecutionStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.ExecutionStatus}
 */
proto.types.ExecutionStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.types.RuntimeStatus} */ (reader.readEnum());
      msg.setRuntimeStatus(value);
      break;
    case 2:
      var value = new proto.types.Aborted;
      reader.readMessage(value,proto.types.Aborted.deserializeBinaryFromReader);
      msg.setAborted(value);
      break;
    case 3:
      var value = new proto.types.ArithmeticError;
      reader.readMessage(value,proto.types.ArithmeticError.deserializeBinaryFromReader);
      msg.setArithmeticError(value);
      break;
    case 4:
      var value = new proto.types.DynamicReferenceError;
      reader.readMessage(value,proto.types.DynamicReferenceError.deserializeBinaryFromReader);
      msg.setReferenceError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.ExecutionStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.ExecutionStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.ExecutionStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.ExecutionStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.types.RuntimeStatus} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAborted();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.types.Aborted.serializeBinaryToWriter
    );
  }
  f = message.getArithmeticError();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.types.ArithmeticError.serializeBinaryToWriter
    );
  }
  f = message.getReferenceError();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.types.DynamicReferenceError.serializeBinaryToWriter
    );
  }
};


/**
 * optional RuntimeStatus runtime_status = 1;
 * @return {!proto.types.RuntimeStatus}
 */
proto.types.ExecutionStatus.prototype.getRuntimeStatus = function() {
  return /** @type {!proto.types.RuntimeStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.types.RuntimeStatus} value */
proto.types.ExecutionStatus.prototype.setRuntimeStatus = function(value) {
  jspb.Message.setOneofField(this, 1, proto.types.ExecutionStatus.oneofGroups_[0], value);
};


proto.types.ExecutionStatus.prototype.clearRuntimeStatus = function() {
  jspb.Message.setOneofField(this, 1, proto.types.ExecutionStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.ExecutionStatus.prototype.hasRuntimeStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Aborted aborted = 2;
 * @return {?proto.types.Aborted}
 */
proto.types.ExecutionStatus.prototype.getAborted = function() {
  return /** @type{?proto.types.Aborted} */ (
    jspb.Message.getWrapperField(this, proto.types.Aborted, 2));
};


/** @param {?proto.types.Aborted|undefined} value */
proto.types.ExecutionStatus.prototype.setAborted = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.types.ExecutionStatus.oneofGroups_[0], value);
};


proto.types.ExecutionStatus.prototype.clearAborted = function() {
  this.setAborted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.ExecutionStatus.prototype.hasAborted = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ArithmeticError arithmetic_error = 3;
 * @return {?proto.types.ArithmeticError}
 */
proto.types.ExecutionStatus.prototype.getArithmeticError = function() {
  return /** @type{?proto.types.ArithmeticError} */ (
    jspb.Message.getWrapperField(this, proto.types.ArithmeticError, 3));
};


/** @param {?proto.types.ArithmeticError|undefined} value */
proto.types.ExecutionStatus.prototype.setArithmeticError = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.types.ExecutionStatus.oneofGroups_[0], value);
};


proto.types.ExecutionStatus.prototype.clearArithmeticError = function() {
  this.setArithmeticError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.ExecutionStatus.prototype.hasArithmeticError = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DynamicReferenceError reference_error = 4;
 * @return {?proto.types.DynamicReferenceError}
 */
proto.types.ExecutionStatus.prototype.getReferenceError = function() {
  return /** @type{?proto.types.DynamicReferenceError} */ (
    jspb.Message.getWrapperField(this, proto.types.DynamicReferenceError, 4));
};


/** @param {?proto.types.DynamicReferenceError|undefined} value */
proto.types.ExecutionStatus.prototype.setReferenceError = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.types.ExecutionStatus.oneofGroups_[0], value);
};


proto.types.ExecutionStatus.prototype.clearReferenceError = function() {
  this.setReferenceError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.ExecutionStatus.prototype.hasReferenceError = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.VMStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.types.VMStatus.oneofGroups_);
};
goog.inherits(proto.types.VMStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.types.VMStatus.displayName = 'proto.types.VMStatus';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.types.VMStatus.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.types.VMStatus.ErrorTypeCase = {
  ERROR_TYPE_NOT_SET: 0,
  VALIDATION: 1,
  VERIFICATION: 2,
  INVARIANT_VIOLATION: 3,
  DESERIALIZATION: 4,
  EXECUTION: 5
};

/**
 * @return {proto.types.VMStatus.ErrorTypeCase}
 */
proto.types.VMStatus.prototype.getErrorTypeCase = function() {
  return /** @type {proto.types.VMStatus.ErrorTypeCase} */(jspb.Message.computeOneofCase(this, proto.types.VMStatus.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.VMStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.types.VMStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.VMStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.VMStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    validation: (f = msg.getValidation()) && proto.types.VMValidationStatus.toObject(includeInstance, f),
    verification: (f = msg.getVerification()) && proto.types.VMVerificationStatusList.toObject(includeInstance, f),
    invariantViolation: jspb.Message.getFieldWithDefault(msg, 3, 0),
    deserialization: jspb.Message.getFieldWithDefault(msg, 4, 0),
    execution: (f = msg.getExecution()) && proto.types.ExecutionStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.VMStatus}
 */
proto.types.VMStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.VMStatus;
  return proto.types.VMStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.VMStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.VMStatus}
 */
proto.types.VMStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.types.VMValidationStatus;
      reader.readMessage(value,proto.types.VMValidationStatus.deserializeBinaryFromReader);
      msg.setValidation(value);
      break;
    case 2:
      var value = new proto.types.VMVerificationStatusList;
      reader.readMessage(value,proto.types.VMVerificationStatusList.deserializeBinaryFromReader);
      msg.setVerification(value);
      break;
    case 3:
      var value = /** @type {!proto.types.VMInvariantViolationError} */ (reader.readEnum());
      msg.setInvariantViolation(value);
      break;
    case 4:
      var value = /** @type {!proto.types.BinaryError} */ (reader.readEnum());
      msg.setDeserialization(value);
      break;
    case 5:
      var value = new proto.types.ExecutionStatus;
      reader.readMessage(value,proto.types.ExecutionStatus.deserializeBinaryFromReader);
      msg.setExecution(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.VMStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.VMStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.VMStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.VMStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.types.VMValidationStatus.serializeBinaryToWriter
    );
  }
  f = message.getVerification();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.types.VMVerificationStatusList.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.types.VMInvariantViolationError} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.types.BinaryError} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getExecution();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.types.ExecutionStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional VMValidationStatus validation = 1;
 * @return {?proto.types.VMValidationStatus}
 */
proto.types.VMStatus.prototype.getValidation = function() {
  return /** @type{?proto.types.VMValidationStatus} */ (
    jspb.Message.getWrapperField(this, proto.types.VMValidationStatus, 1));
};


/** @param {?proto.types.VMValidationStatus|undefined} value */
proto.types.VMStatus.prototype.setValidation = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.types.VMStatus.oneofGroups_[0], value);
};


proto.types.VMStatus.prototype.clearValidation = function() {
  this.setValidation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.VMStatus.prototype.hasValidation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional VMVerificationStatusList verification = 2;
 * @return {?proto.types.VMVerificationStatusList}
 */
proto.types.VMStatus.prototype.getVerification = function() {
  return /** @type{?proto.types.VMVerificationStatusList} */ (
    jspb.Message.getWrapperField(this, proto.types.VMVerificationStatusList, 2));
};


/** @param {?proto.types.VMVerificationStatusList|undefined} value */
proto.types.VMStatus.prototype.setVerification = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.types.VMStatus.oneofGroups_[0], value);
};


proto.types.VMStatus.prototype.clearVerification = function() {
  this.setVerification(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.VMStatus.prototype.hasVerification = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional VMInvariantViolationError invariant_violation = 3;
 * @return {!proto.types.VMInvariantViolationError}
 */
proto.types.VMStatus.prototype.getInvariantViolation = function() {
  return /** @type {!proto.types.VMInvariantViolationError} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.types.VMInvariantViolationError} value */
proto.types.VMStatus.prototype.setInvariantViolation = function(value) {
  jspb.Message.setOneofField(this, 3, proto.types.VMStatus.oneofGroups_[0], value);
};


proto.types.VMStatus.prototype.clearInvariantViolation = function() {
  jspb.Message.setOneofField(this, 3, proto.types.VMStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.VMStatus.prototype.hasInvariantViolation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BinaryError deserialization = 4;
 * @return {!proto.types.BinaryError}
 */
proto.types.VMStatus.prototype.getDeserialization = function() {
  return /** @type {!proto.types.BinaryError} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.types.BinaryError} value */
proto.types.VMStatus.prototype.setDeserialization = function(value) {
  jspb.Message.setOneofField(this, 4, proto.types.VMStatus.oneofGroups_[0], value);
};


proto.types.VMStatus.prototype.clearDeserialization = function() {
  jspb.Message.setOneofField(this, 4, proto.types.VMStatus.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.VMStatus.prototype.hasDeserialization = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ExecutionStatus execution = 5;
 * @return {?proto.types.ExecutionStatus}
 */
proto.types.VMStatus.prototype.getExecution = function() {
  return /** @type{?proto.types.ExecutionStatus} */ (
    jspb.Message.getWrapperField(this, proto.types.ExecutionStatus, 5));
};


/** @param {?proto.types.ExecutionStatus|undefined} value */
proto.types.VMStatus.prototype.setExecution = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.types.VMStatus.oneofGroups_[0], value);
};


proto.types.VMStatus.prototype.clearExecution = function() {
  this.setExecution(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.VMStatus.prototype.hasExecution = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.types.VMValidationStatusCode = {
  UNKNOWNVALIDATIONSTATUS: 0,
  INVALIDSIGNATURE: 1,
  INVALIDAUTHKEY: 2,
  SEQUENCENUMBERTOOOLD: 3,
  SEQUENCENUMBERTOONEW: 4,
  INSUFFICIENTBALANCEFORTRANSACTIONFEE: 5,
  TRANSACTIONEXPIRED: 6,
  SENDINGACCOUNTDOESNOTEXIST: 7,
  REJECTEDWRITESET: 8,
  INVALIDWRITESET: 9,
  EXCEEDEDMAXTRANSACTIONSIZE: 10,
  UNKNOWNSCRIPT: 11,
  UNKNOWNMODULE: 12,
  MAXGASUNITSEXCEEDSMAXGASUNITSBOUND: 13,
  MAXGASUNITSBELOWMINTRANSACTIONGASUNITS: 14,
  GASUNITPRICEBELOWMINBOUND: 15,
  GASUNITPRICEABOVEMAXBOUND: 16
};

/**
 * @enum {number}
 */
proto.types.VMVerificationErrorKind = {
  UNKNOWNVERIFICATIONERROR: 0,
  INDEXOUTOFBOUNDS: 1,
  CODEUNITINDEXOUTOFBOUNDS: 2,
  RANGEOUTOFBOUNDS: 3,
  INVALIDSIGNATURETOKEN: 4,
  INVALIDFIELDDEFREFERENCE: 5,
  RECURSIVESTRUCTDEFINITION: 6,
  INVALIDRESOURCEFIELD: 7,
  INVALIDFALLTHROUGH: 8,
  JOINFAILURE: 9,
  NEGATIVESTACKSIZEWITHINBLOCK: 10,
  UNBALANCEDSTACK: 11,
  INVALIDMAINFUNCTIONSIGNATURE: 12,
  DUPLICATEELEMENT: 13,
  INVALIDMODULEHANDLE: 14,
  UNIMPLEMENTEDHANDLE: 15,
  INCONSISTENTFIELDS: 16,
  UNUSEDFIELDS: 17,
  LOOKUPFAILED: 18,
  VISIBILITYMISMATCH: 19,
  TYPERESOLUTIONFAILURE: 20,
  TYPEMISMATCH: 21,
  MISSINGDEPENDENCY: 22,
  POPREFERENCEERROR: 23,
  POPRESOURCEERROR: 24,
  RELEASEREFTYPEMISMATCHERROR: 25,
  BRTYPEMISMATCHERROR: 26,
  ABORTTYPEMISMATCHERROR: 27,
  STLOCTYPEMISMATCHERROR: 28,
  STLOCUNSAFETODESTROYERROR: 29,
  RETUNSAFETODESTROYERROR: 30,
  RETTYPEMISMATCHERROR: 31,
  FREEZEREFTYPEMISMATCHERROR: 32,
  FREEZEREFEXISTSMUTABLEBORROWERROR: 33,
  BORROWFIELDTYPEMISMATCHERROR: 34,
  BORROWFIELDBADFIELDERROR: 35,
  BORROWFIELDEXISTSMUTABLEBORROWERROR: 36,
  COPYLOCUNAVAILABLEERROR: 37,
  COPYLOCRESOURCEERROR: 38,
  COPYLOCEXISTSBORROWERROR: 39,
  MOVELOCUNAVAILABLEERROR: 40,
  MOVELOCEXISTSBORROWERROR: 41,
  BORROWLOCREFERENCEERROR: 42,
  BORROWLOCUNAVAILABLEERROR: 43,
  BORROWLOCEXISTSBORROWERROR: 44,
  CALLTYPEMISMATCHERROR: 45,
  CALLBORROWEDMUTABLEREFERENCEERROR: 46,
  PACKTYPEMISMATCHERROR: 47,
  UNPACKTYPEMISMATCHERROR: 48,
  READREFTYPEMISMATCHERROR: 49,
  READREFRESOURCEERROR: 50,
  READREFEXISTSMUTABLEBORROWERROR: 51,
  WRITEREFTYPEMISMATCHERROR: 52,
  WRITEREFRESOURCEERROR: 53,
  WRITEREFEXISTSBORROWERROR: 54,
  WRITEREFNOMUTABLEREFERENCEERROR: 55,
  INTEGEROPTYPEMISMATCHERROR: 56,
  BOOLEANOPTYPEMISMATCHERROR: 57,
  EQUALITYOPTYPEMISMATCHERROR: 58,
  EXISTSRESOURCETYPEMISMATCHERROR: 59,
  EXISTSNORESOURCEERROR: 60,
  BORROWGLOBALTYPEMISMATCHERROR: 61,
  BORROWGLOBALNORESOURCEERROR: 62,
  MOVEFROMTYPEMISMATCHERROR: 63,
  MOVEFROMNORESOURCEERROR: 64,
  MOVETOSENDERTYPEMISMATCHERROR: 65,
  MOVETOSENDERNORESOURCEERROR: 66,
  CREATEACCOUNTTYPEMISMATCHERROR: 67,
  GLOBALREFERENCEERROR: 68,
  MODULEADDRESSDOESNOTMATCHSENDER: 69,
  NOMODULEHANDLES: 70,
  MISSINGACQUIRESRESOURCEANNOTATIONERROR: 71,
  EXTRANEOUSACQUIRESRESOURCEANNOTATIONERROR: 72,
  DUPLICATEACQUIRESRESOURCEANNOTATIONERROR: 73,
  INVALIDACQUIRESRESOURCEANNOTATIONERROR: 74
};

/**
 * @enum {number}
 */
proto.types.VMInvariantViolationError = {
  UNKNOWNINVARIANTVIOLATIONERROR: 0,
  OUTOFBOUNDSINDEX: 1,
  OUTOFBOUNDSRANGE: 2,
  EMPTYVALUESTACK: 3,
  EMPTYCALLSTACK: 4,
  PCOVERFLOW: 5,
  LINKERERROR: 6,
  LOCALREFERENCEERROR: 7,
  STORAGEERROR: 8,
  INTERNALTYPEERROR: 9,
  EVENTKEYMISMATCH: 10
};

/**
 * @enum {number}
 */
proto.types.BinaryError = {
  UNKNOWNBINARYERROR: 0,
  MALFORMED: 1,
  BADMAGIC: 2,
  UNKNOWNVERSION: 3,
  UNKNOWNTABLETYPE: 4,
  UNKNOWNSIGNATURETYPE: 5,
  UNKNOWNSERIALIZEDTYPE: 6,
  UNKNOWNOPCODE: 7,
  BADHEADERTABLE: 8,
  UNEXPECTEDSIGNATURETYPE: 9,
  DUPLICATETABLE: 10
};

/**
 * @enum {number}
 */
proto.types.RuntimeStatus = {
  UNKNOWNRUNTIMESTATUS: 0,
  EXECUTED: 1,
  OUTOFGAS: 2,
  RESOURCEDOESNOTEXIST: 3,
  RESOURCEALREADYEXISTS: 4,
  EVICTEDACCOUNTACCESS: 5,
  ACCOUNTADDRESSALREADYEXISTS: 6,
  TYPEERROR: 7,
  MISSINGDATA: 8,
  DATAFORMATERROR: 9,
  INVALIDDATA: 10,
  REMOTEDATAERROR: 11,
  CANNOTWRITEEXISTINGRESOURCE: 12,
  VALUESERIALIZATIONERROR: 13,
  VALUEDESERIALIZATIONERROR: 14,
  DUPLICATEMODULENAME: 15,
  EXECUTIONSTACKOVERFLOW: 16,
  CALLSTACKOVERFLOW: 17
};

goog.object.extend(exports, proto.types);
